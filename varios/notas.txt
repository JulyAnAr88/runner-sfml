cargar tiles
colisiones

cargo el nombre del tile como animaciÃ³n para setearlo en el update del tile


		TileInfo* tile = new TileInfo(m_context,"TileSheet",tileId);
		keystream >> tile->m_name >> tile->m_friction.x >> tile->m_friction.y 
		>> tile->m_deadly >> tile->m_frameStart >> tile->m_frameEnd
		>> tile->m_frameTime >> tile->m_frameActionStart >> tile->m_frameActionEnd;
		if (tile->m_frameEnd > 0){
			Anim_Rect* anim = new Anim_Rect(tile->m_frameStart, tile->m_frameEnd,
			 tile->m_frameTime, tile->m_frameActionStart, tile->m_frameActionEnd);
			for(size_t i = 0; i <= anim->getEndFrame(); i++){
				keystream >> tile->coordCrop.left >> tile->coordCrop.top >> tile->coordCrop.width >> tile->coordCrop.height;
				anim->setFrameRect(anim->getFrameRow(), tile->coordCrop);
			/* std::cout<<"coord tile "<<i<<" "<<tile->coordCrop.left<<" "<<tile->coordCrop.top<<" "<<
			 tile->coordCrop.width<<" "<<tile->coordCrop.height<<std::endl; */
			}
			anim->setName(tile->m_name);
			anim->Reset();
			m_animations.emplace(tile->m_name,anim);
			anim->Play();
		}else{
			keystream >> tile->coordCrop.left >> tile->coordCrop.top >> tile->coordCrop.width >> tile->coordCrop.height;
		}
			std::cout<<"load en map tile "<<tile->coordCrop.left<<" "<<tile->coordCrop.top<<" "<<
			 tile->coordCrop.width<<" "<<tile->coordCrop.height<<std::endl;
		
		if(!m_tileSet.emplace(tileId,tile).second){
			// Duplicate tile detected!
			std::cout << "! Duplicate tile type: " << tile->m_name << std::endl;
			delete tile;
		}
	}
	file.close();

type.find_first_not_of( "0123456789" ) == std::string::npos

